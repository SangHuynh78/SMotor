
ENCODER_SIMULATE.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  00000150  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000000fc  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  00000150  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000180  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000020  00000000  00000000  000001c0  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000834  00000000  00000000  000001e0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000699  00000000  00000000  00000a14  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000002ce  00000000  00000000  000010ad  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000024  00000000  00000000  0000137c  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000383  00000000  00000000  000013a0  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    0000017d  00000000  00000000  00001723  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000010  00000000  00000000  000018a0  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   8:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  10:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  14:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  18:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  1c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  20:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  24:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  28:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  2c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  30:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  34:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  38:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  3c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  40:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  44:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  48:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  4c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  50:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  54:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  58:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  5c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  60:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  64:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61
  74:	0e 94 40 00 	call	0x80	; 0x80 <main>
  78:	0c 94 7c 00 	jmp	0xf8	; 0xf8 <_exit>

0000007c <__bad_interrupt>:
  7c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000080 <main>:
#define Z_DDR		DDRD
#define Z_PORT		PORTD

int main(void)
{	// Output pin
	Z_DDR  |=  (1 << Z_PIN);
  80:	8a b1       	in	r24, 0x0a	; 10
  82:	80 64       	ori	r24, 0x40	; 64
  84:	8a b9       	out	0x0a, r24	; 10
	A_DDR  |=  (1 << A_PIN);
  86:	8a b1       	in	r24, 0x0a	; 10
  88:	80 68       	ori	r24, 0x80	; 128
  8a:	8a b9       	out	0x0a, r24	; 10
    while (1)
    {
		uint8_t i = 0;
		Z_PORT |= (1 << Z_PIN);
  8c:	8b b1       	in	r24, 0x0b	; 11
  8e:	80 64       	ori	r24, 0x40	; 64
  90:	8b b9       	out	0x0b, r24	; 11
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  92:	85 e8       	ldi	r24, 0x85	; 133
  94:	8a 95       	dec	r24
  96:	f1 f7       	brne	.-4      	; 0x94 <main+0x14>
  98:	00 00       	nop
		_delay_us(50);
		Z_PORT &= ~(1 << Z_PIN);
  9a:	8b b1       	in	r24, 0x0b	; 11
  9c:	8f 7b       	andi	r24, 0xBF	; 191
  9e:	8b b9       	out	0x0b, r24	; 11
{	// Output pin
	Z_DDR  |=  (1 << Z_PIN);
	A_DDR  |=  (1 << A_PIN);
    while (1)
    {
		uint8_t i = 0;
  a0:	90 e0       	ldi	r25, 0x00	; 0
		Z_PORT |= (1 << Z_PIN);
		_delay_us(50);
		Z_PORT &= ~(1 << Z_PIN);
		while(i < 100)
  a2:	0f c0       	rjmp	.+30     	; 0xc2 <main+0x42>
		{
			A_PORT |= (1 << A_PIN);
  a4:	8b b1       	in	r24, 0x0b	; 11
  a6:	80 68       	ori	r24, 0x80	; 128
  a8:	8b b9       	out	0x0b, r24	; 11
  aa:	85 e8       	ldi	r24, 0x85	; 133
  ac:	8a 95       	dec	r24
  ae:	f1 f7       	brne	.-4      	; 0xac <main+0x2c>
  b0:	00 00       	nop
			_delay_us(50);
			A_PORT &= ~(1 << A_PIN);
  b2:	8b b1       	in	r24, 0x0b	; 11
  b4:	8f 77       	andi	r24, 0x7F	; 127
  b6:	8b b9       	out	0x0b, r24	; 11
  b8:	85 e8       	ldi	r24, 0x85	; 133
  ba:	8a 95       	dec	r24
  bc:	f1 f7       	brne	.-4      	; 0xba <main+0x3a>
  be:	00 00       	nop
			_delay_us(50);
			i++;
  c0:	9f 5f       	subi	r25, 0xFF	; 255
    {
		uint8_t i = 0;
		Z_PORT |= (1 << Z_PIN);
		_delay_us(50);
		Z_PORT &= ~(1 << Z_PIN);
		while(i < 100)
  c2:	94 36       	cpi	r25, 0x64	; 100
  c4:	78 f3       	brcs	.-34     	; 0xa4 <main+0x24>
  c6:	0f c0       	rjmp	.+30     	; 0xe6 <main+0x66>
		}
		//_delay_us(1000);
		//_delay_ms(3000);
		while(i < 200)
		{
			A_PORT |= (1 << A_PIN);
  c8:	8b b1       	in	r24, 0x0b	; 11
  ca:	80 68       	ori	r24, 0x80	; 128
  cc:	8b b9       	out	0x0b, r24	; 11
  ce:	85 e8       	ldi	r24, 0x85	; 133
  d0:	8a 95       	dec	r24
  d2:	f1 f7       	brne	.-4      	; 0xd0 <main+0x50>
  d4:	00 00       	nop
			_delay_us(50);
			A_PORT &= ~(1 << A_PIN);
  d6:	8b b1       	in	r24, 0x0b	; 11
  d8:	8f 77       	andi	r24, 0x7F	; 127
  da:	8b b9       	out	0x0b, r24	; 11
  dc:	85 e8       	ldi	r24, 0x85	; 133
  de:	8a 95       	dec	r24
  e0:	f1 f7       	brne	.-4      	; 0xde <main+0x5e>
  e2:	00 00       	nop
			_delay_us(50);
			i++;
  e4:	9f 5f       	subi	r25, 0xFF	; 255
			_delay_us(50);
			i++;
		}
		//_delay_us(1000);
		//_delay_ms(3000);
		while(i < 200)
  e6:	98 3c       	cpi	r25, 0xC8	; 200
  e8:	78 f3       	brcs	.-34     	; 0xc8 <main+0x48>
  ea:	87 ec       	ldi	r24, 0xC7	; 199
  ec:	90 e0       	ldi	r25, 0x00	; 0
  ee:	01 97       	sbiw	r24, 0x01	; 1
  f0:	f1 f7       	brne	.-4      	; 0xee <main+0x6e>
  f2:	00 c0       	rjmp	.+0      	; 0xf4 <main+0x74>
  f4:	00 00       	nop
  f6:	ca cf       	rjmp	.-108    	; 0x8c <main+0xc>

000000f8 <_exit>:
  f8:	f8 94       	cli

000000fa <__stop_program>:
  fa:	ff cf       	rjmp	.-2      	; 0xfa <__stop_program>
